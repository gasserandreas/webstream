[{"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/reportWebVitals.ts":"1","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/index.tsx":"2","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/App.tsx":"3","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/theme.tsx":"4","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/ui/iFrame/index.tsx":"5","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/home/index.tsx":"6"},{"size":425,"mtime":1608481246127,"results":"7","hashOfConfig":"8"},{"size":704,"mtime":1608481849179,"results":"9","hashOfConfig":"8"},{"size":131,"mtime":1608482252605,"results":"10","hashOfConfig":"8"},{"size":424,"mtime":1608482424869,"results":"11","hashOfConfig":"8"},{"size":971,"mtime":1608469318820,"results":"12","hashOfConfig":"8"},{"size":3727,"mtime":1608482466923,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wx9op0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/reportWebVitals.ts",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/index.tsx",["27"],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/App.tsx",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/theme.tsx",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/ui/iFrame/index.tsx",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/home/index.tsx",["28"],"import React, { useRef, useEffect, useState } from 'react';\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nimport IFrame from '../../ui/iFrame';\n\n// type definitions\ntype SizeDefinition = Optional<{\n  height: number;\n  width: number;\n}>;\n\ntype Indices = {\n  odd: number;\n  even: number;\n};\n\nenum VisibleFrame {\n  EVEN = 'even',\n  ODD = 'odd',\n};\n\n// interval definitions\nconst INTERVAL_TIME = 30 * 1000; \nconst INTERVAL_TIME_DELAY = 5000;\n\nconst useStyles = makeStyles(() => createStyles({\n  wrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n  },\n  frame: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n}));\n\nfunction getSizeForDiv(div: HTMLDivElement): SizeDefinition {\n  if (!div) {\n    return null;\n  }\n  const { clientHeight, clientWidth } = div;\n\n  return {\n    height: clientHeight,\n    width: clientWidth,\n  };\n}\n\nconst LINKS = [\n  'https://buochs.roundshot.com',\n  'https://kaeserstatt.roundshot.com',\n  'https://grindelwaldbus.roundshot.com',\n  'https://gemmi.roundshot.com',\n];\n\nexport default function Index() {\n  const classes = useStyles();\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const indexIntervalRef = useRef<any>();\n  const toggleIntervalRef = useRef<any>();\n\n  const [indices, setIndices] = useState<Indices>({ even: 0, odd: 1 })\n\n  const [sizes, setSizes] = useState<SizeDefinition | null>(null);\n  const visibleFrameRef = useRef(VisibleFrame.EVEN);\n\n  function getNextIndex(prevIndex: number): number {\n    let nextIndex = prevIndex + 1;\n\n    if (nextIndex === LINKS.length) {\n      nextIndex = 0;\n    }\n\n    return nextIndex;\n  }\n\n  function handleIndexInterval(prevIndices: Indices): Indices {\n    console.log('handleIndexInterval');\n    const newIndices = { ...prevIndices };\n\n    if (visibleFrameRef.current === VisibleFrame.EVEN) {\n      newIndices.odd = getNextIndex(newIndices.even);\n    } else {\n      newIndices.even = getNextIndex(newIndices.odd);\n    }\n\n    return newIndices;\n  }\n\n  // get size\n  useEffect(() => {\n    const div = wrapperRef.current;\n\n    if (div) {\n      setSizes(getSizeForDiv(div));\n    }\n  }, []);\n\n  useEffect(() => {\n    // handle index change\n    toggleIntervalRef.current = setInterval(() => {\n      visibleFrameRef.current = visibleFrameRef.current === VisibleFrame.EVEN ? VisibleFrame.ODD : VisibleFrame.EVEN;\n    }, INTERVAL_TIME);\n\n    setTimeout(() => {\n      console.log('create event handler...');\n      indexIntervalRef.current = setInterval(() => {\n        setIndices((prevIndices) => handleIndexInterval(prevIndices));\n      }, INTERVAL_TIME);\n\n      // change first index\n      setIndices((prevIndices) => handleIndexInterval(prevIndices));\n    }, INTERVAL_TIME - INTERVAL_TIME_DELAY)\n\n    return () => {\n      if (indexIntervalRef.current) {\n        console.log('clear indexIntervalRef interval');\n        clearInterval(indexIntervalRef.current);\n      }\n\n      if (toggleIntervalRef.current) {\n        console.log('clear toggleIntervalRef interval');\n        clearInterval(toggleIntervalRef.current);\n      }\n    }\n  }, []);\n\n  const { even, odd } = indices;\n  const visibleFrame = visibleFrameRef.current;\n\n  return (\n    <div className={classes.wrapper} ref={wrapperRef}>\n      <div className={classes.frame} style={{ opacity: visibleFrame === VisibleFrame.EVEN ? 1 : 0 }}>\n      <IFrame\n        link={LINKS[even]}\n        width={sizes?.width}\n        height={sizes?.height}\n      />\n      </div>\n      <div className={classes.frame} style={{ opacity: visibleFrame === VisibleFrame.ODD ? 1 : 0 }}>\n        <IFrame\n          link={LINKS[odd]}\n          width={sizes?.width}\n          height={sizes?.height}\n          />\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"29","severity":1,"message":"30","line":8,"column":8,"nodeType":"31","messageId":"32","endLine":8,"endColumn":13},{"ruleId":"33","severity":1,"message":"34","line":132,"column":6,"nodeType":"35","endLine":132,"endColumn":8,"suggestions":"36"},"@typescript-eslint/no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleIndexInterval'. Either include it or remove the dependency array.","ArrayExpression",["37"],{"desc":"38","fix":"39"},"Update the dependencies array to be: [handleIndexInterval]",{"range":"40","text":"41"},[3095,3097],"[handleIndexInterval]"]