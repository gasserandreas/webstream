[{"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/reportWebVitals.ts":"1","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/index.tsx":"2","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/App.tsx":"3","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/theme.tsx":"4","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/ui/iFrame/index.tsx":"5","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/home/index.tsx":"6","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/misc/not-found.tsx":"7","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/settings/index.tsx":"8"},{"size":425,"mtime":1608481246127,"results":"9","hashOfConfig":"10"},{"size":802,"mtime":1608484997033,"results":"11","hashOfConfig":"10"},{"size":716,"mtime":1608486495687,"results":"12","hashOfConfig":"10"},{"size":424,"mtime":1608482424869,"results":"13","hashOfConfig":"10"},{"size":971,"mtime":1608469318820,"results":"14","hashOfConfig":"10"},{"size":3980,"mtime":1608485517992,"results":"15","hashOfConfig":"10"},{"size":390,"mtime":1608485327468,"results":"16","hashOfConfig":"10"},{"size":474,"mtime":1608485957169,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wx9op0",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/reportWebVitals.ts",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/index.tsx",[],["36","37"],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/App.tsx",["38"],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/theme.tsx",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/ui/iFrame/index.tsx",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/home/index.tsx",["39"],"import React, { useRef, useEffect, useState } from 'react';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nimport IFrame from '../../ui/iFrame';\n\n// type definitions\ntype SizeDefinition = Optional<{\n  height: number;\n  width: number;\n}>;\n\ntype Indices = {\n  odd: number;\n  even: number;\n};\n\nenum VisibleFrame {\n  EVEN = 'even',\n  ODD = 'odd',\n};\n\n// interval definitions\nconst INTERVAL_TIME = 30 * 1000; \nconst INTERVAL_TIME_DELAY = 5000;\n\nconst useStyles = makeStyles(() => createStyles({\n  wrapper: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n  },\n  frame: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n}));\n\nfunction getSizeForDiv(div: HTMLDivElement): SizeDefinition {\n  if (!div) {\n    return null;\n  }\n  const { clientHeight, clientWidth } = div;\n\n  return {\n    height: clientHeight,\n    width: clientWidth,\n  };\n}\n\nconst LINKS = [\n  'https://buochs.roundshot.com',\n  'https://kaeserstatt.roundshot.com',\n  'https://grindelwaldbus.roundshot.com',\n  'https://gemmi.roundshot.com',\n];\n\nfunction IndexPage() {\n  const classes = useStyles();\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const indexIntervalRef = useRef<any>();\n  const toggleIntervalRef = useRef<any>();\n\n  const [indices, setIndices] = useState<Indices>({ even: 0, odd: 1 })\n\n  const [sizes, setSizes] = useState<SizeDefinition | null>(null);\n  const visibleFrameRef = useRef(VisibleFrame.EVEN);\n\n  function getNextIndex(prevIndex: number): number {\n    let nextIndex = prevIndex + 1;\n\n    if (nextIndex === LINKS.length) {\n      nextIndex = 0;\n    }\n\n    return nextIndex;\n  }\n\n  function handleIndexInterval(prevIndices: Indices): Indices {\n    console.log('handleIndexInterval');\n    const newIndices = { ...prevIndices };\n\n    if (visibleFrameRef.current === VisibleFrame.EVEN) {\n      newIndices.odd = getNextIndex(newIndices.even);\n    } else {\n      newIndices.even = getNextIndex(newIndices.odd);\n    }\n\n    return newIndices;\n  }\n\n  // get size\n  useEffect(() => {\n    const div = wrapperRef.current;\n\n    if (div) {\n      setSizes(getSizeForDiv(div));\n    }\n  }, []);\n\n  useEffect(() => {\n    // handle index change\n    toggleIntervalRef.current = setInterval(() => {\n      visibleFrameRef.current = visibleFrameRef.current === VisibleFrame.EVEN ? VisibleFrame.ODD : VisibleFrame.EVEN;\n    }, INTERVAL_TIME);\n\n    setTimeout(() => {\n      console.log('create event handler...');\n      indexIntervalRef.current = setInterval(() => {\n        setIndices((prevIndices) => handleIndexInterval(prevIndices));\n      }, INTERVAL_TIME);\n\n      // change first index\n      setIndices((prevIndices) => handleIndexInterval(prevIndices));\n    }, INTERVAL_TIME - INTERVAL_TIME_DELAY)\n\n    return () => {\n      if (indexIntervalRef.current) {\n        console.log('clear indexIntervalRef interval');\n        clearInterval(indexIntervalRef.current);\n      }\n\n      if (toggleIntervalRef.current) {\n        console.log('clear toggleIntervalRef interval');\n        clearInterval(toggleIntervalRef.current);\n      }\n    }\n  }, [handleIndexInterval]);\n\n  const { even, odd } = indices;\n  const visibleFrame = visibleFrameRef.current;\n\n  return (\n    <div className={classes.wrapper} ref={wrapperRef}>\n      <div className={classes.frame} style={{ opacity: visibleFrame === VisibleFrame.EVEN ? 1 : 0 }}>\n      <IFrame\n        link={LINKS[even]}\n        width={sizes?.width}\n        height={sizes?.height}\n      />\n      </div>\n      <div className={classes.frame} style={{ opacity: visibleFrame === VisibleFrame.ODD ? 1 : 0 }}>\n        <IFrame\n          link={LINKS[odd]}\n          width={sizes?.width}\n          height={sizes?.height}\n          />\n      </div>\n    </div>\n  );\n}\n\nexport default function IndexHandler() {\n  const { path } = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={path} component={IndexPage} />\n    </Switch>\n  );\n}\n","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/misc/not-found.tsx",[],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/settings/index.tsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":16},{"ruleId":"48","severity":1,"message":"49","line":85,"column":3,"nodeType":"50","endLine":96,"endColumn":4},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'Notfound' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'handleIndexInterval' function makes the dependencies of useEffect Hook (at line 134) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleIndexInterval' in its own useCallback() Hook.","FunctionDeclaration","no-global-assign","no-unsafe-negation"]