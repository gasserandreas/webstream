[{"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/home/index.tsx":"1","/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/reportWebVitals.ts":"2"},{"size":4054,"mtime":1608652929314,"results":"3","hashOfConfig":"4"},{"size":435,"mtime":1608652929316,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1cbun5u",{"filePath":"8","messages":"9","errorCount":2,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/pages/home/index.tsx",["10","11","12","13","14","15","16","17"],"/Users/andreasgasser/Documents/Development/Projects/WebStreams/webstream/src/reportWebVitals.ts",["18","19","20"],{"ruleId":"21","severity":1,"message":"22","line":69,"column":35,"nodeType":"23","messageId":"24","endLine":69,"endColumn":38,"suggestions":"25"},{"ruleId":"21","severity":1,"message":"22","line":70,"column":36,"nodeType":"23","messageId":"24","endLine":70,"endColumn":39,"suggestions":"26"},{"ruleId":"27","severity":1,"message":"28","line":87,"column":3,"nodeType":"29","endLine":98,"endColumn":4},{"ruleId":"30","severity":1,"message":"31","line":88,"column":5,"nodeType":"32","messageId":"33","endLine":88,"endColumn":16},{"ruleId":"30","severity":1,"message":"31","line":119,"column":7,"nodeType":"32","messageId":"33","endLine":119,"endColumn":18},{"ruleId":"30","severity":1,"message":"31","line":130,"column":9,"nodeType":"32","messageId":"33","endLine":130,"endColumn":20},{"ruleId":"30","severity":1,"message":"31","line":135,"column":9,"nodeType":"32","messageId":"33","endLine":135,"endColumn":20},{"ruleId":"34","severity":1,"message":"35","line":166,"column":16,"nodeType":"29","messageId":"36","endLine":166,"endColumn":39},{"ruleId":"37","severity":2,"message":"38","line":1,"column":31,"nodeType":null,"endLine":1,"endColumn":43,"fix":"39"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":25,"nodeType":"40","messageId":"36","endLine":3,"endColumn":57},{"ruleId":"37","severity":2,"message":"41","line":5,"column":12,"nodeType":null,"endLine":7,"endColumn":4,"fix":"42"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["43","44"],["45","46"],"react-hooks/exhaustive-deps","The 'handleIndexInterval' function makes the dependencies of useEffect Hook (at line 139) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleIndexInterval' in its own useCallback() Hook.","FunctionDeclaration","no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","missingReturnType","prettier/prettier","Replace `'web-vitals'` with `\"web-vitals\"`",{"range":"47","text":"48"},"ArrowFunctionExpression","Replace `'web-vitals').then(({⏎······getCLS,·getFID,·getFCP,·getLCP,·getTTFB⏎···` with `\"web-vitals\").then(({·getCLS,·getFID,·getFCP,·getLCP,·getTTFB`",{"range":"49","text":"50"},{"messageId":"51","fix":"52","desc":"53"},{"messageId":"54","fix":"55","desc":"56"},{"messageId":"51","fix":"57","desc":"53"},{"messageId":"54","fix":"58","desc":"56"},[30,42],"\"web-vitals\"",[171,242],"\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB","suggestUnknown",{"range":"59","text":"60"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"59","text":"61"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"62","text":"60"},{"range":"62","text":"61"},[1312,1315],"unknown","never",[1355,1358]]